version: '3.9'

#
# Pulse ERP - Base Infrastructure Stack
# Card: C02 - Base Docker Compose
#
# Services: Traefik, Postgres, NATS, MinIO, Prometheus, Grafana
# Target: Raspberry Pi 5 (arm64)
#

services:
  # ============================================
  # Traefik - Ingress & TLS Termination
  # ============================================
  traefik:
    image: traefik:v2.11
    container_name: pulse-traefik
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL:-admin@example.com}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--log.level=INFO"
      - "--accesslog=true"
    ports:
      - "80:80"
      - "443:443"
      - "8090:8080"  # Traefik dashboard (changed from 8080 to avoid conflict)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DATA_PATH:-./data}/traefik/letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN:-local}`)"
      - "traefik.http.routers.traefik.service=api@internal"
    networks:
      - pulse-network

  # ============================================
  # PostgreSQL - Primary Database (OLTP)
  # ============================================
  postgres:
    image: postgres:15-alpine
    container_name: pulse-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-pulse_erp}
      POSTGRES_USER: ${POSTGRES_USER:-pulseadmin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_INITDB_ARGS: "-E UTF8"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ${DATA_PATH:-./data}/postgres:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d:ro
    ports:
      - "5434:5432"  # Changed from 5432 to avoid conflict
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-pulseadmin}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 2G
    networks:
      - pulse-network

  # ============================================
  # NATS JetStream - Event Streaming
  # ============================================
  nats:
    image: nats:2-alpine
    container_name: pulse-nats
    restart: unless-stopped
    command: ["-c", "/etc/nats/nats.conf"]
    volumes:
      - ${DATA_PATH:-./data}/nats:/data
      - ./nats.conf:/etc/nats/nats.conf:ro
    ports:
      - "4222:4222"  # Client connections
      - "8222:8222"  # HTTP monitoring
      - "6222:6222"  # Cluster routes
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - pulse-network

  # ============================================
  # MinIO - S3-Compatible Object Storage
  # ============================================
  minio:
    image: minio/minio:latest
    container_name: pulse-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
    volumes:
      - ${DATA_PATH:-./data}/minio:/data
    ports:
      - "9010:9000"  # API (changed from 9000 to avoid conflict)
      - "9011:9001"  # Console (changed from 9001 to avoid conflict)
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio-console.rule=Host(`minio.${DOMAIN:-local}`)"
      - "traefik.http.routers.minio-console.service=minio-console"
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"
    networks:
      - pulse-network

  # ============================================
  # Prometheus - Metrics Collection
  # ============================================
  prometheus:
    image: prom/prometheus:latest
    container_name: pulse-prometheus
    restart: unless-stopped
    user: root
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - ./grafana/provisioning/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ${DATA_PATH:-./data}/prometheus:/prometheus
    ports:
      - "9090:9090"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - pulse-network

  # ============================================
  # Grafana - Dashboards & Visualization
  # ============================================
  grafana:
    image: grafana/grafana:latest
    container_name: pulse-grafana
    restart: unless-stopped
    user: root
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin}
      GF_INSTALL_PLUGINS: ""
      GF_SERVER_ROOT_URL: "https://grafana.${DOMAIN:-local}"
      GF_AUTH_ANONYMOUS_ENABLED: "false"
    volumes:
      - ${DATA_PATH:-./data}/grafana:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    ports:
      - "3010:3000"  # Changed from 3000 to avoid conflict with Gitea
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 3s
      retries: 3
    depends_on:
      - prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN:-local}`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    networks:
      - pulse-network

# ============================================
# Networks
# ============================================
networks:
  pulse-network:
    name: pulse-network
    driver: bridge

# ============================================
# Volumes (using bind mounts for Pi SSD)
# ============================================
# Note: Actual volumes are bind-mounted from ${DATA_PATH}
# which defaults to ./data or /mnt/ssd for production
