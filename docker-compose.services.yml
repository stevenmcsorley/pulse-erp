version: '3.9'

#
# Pulse ERP - Microservices Stack
# Extends docker-compose.base.yml
#
# Services: Orders, Inventory, Billing, HR, OLAP
# Target: Raspberry Pi 5 (arm64)
#

services:
  # ============================================
  # Orders Service
  # ============================================
  orders:
    build:
      context: ./services/orders
      dockerfile: Dockerfile
    container_name: pulse-orders
    restart: unless-stopped
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-pulse_erp}
      POSTGRES_USER: ${POSTGRES_USER:-pulseadmin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      NATS_URL: nats://nats:4222
      NATS_STREAM: orders
      SERVICE_NAME: orders-service
      SERVICE_PORT: 8001
    ports:
      - "8001:8001"
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8001/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.orders.rule=Host(`api.${DOMAIN:-local}`) && PathPrefix(`/orders`)"
      - "traefik.http.services.orders.loadbalancer.server.port=8001"
    networks:
      - pulse-network

  # ============================================
  # Inventory Service
  # ============================================
  inventory:
    build:
      context: ./services/inventory
      dockerfile: Dockerfile
    container_name: pulse-inventory
    restart: unless-stopped
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-pulse_erp}
      POSTGRES_USER: ${POSTGRES_USER:-pulseadmin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      NATS_URL: nats://nats:4222
      NATS_STREAM: orders
      SERVICE_NAME: inventory-service
      SERVICE_PORT: 8002
    ports:
      - "8002:8002"
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8002/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.inventory.rule=Host(`api.${DOMAIN:-local}`) && PathPrefix(`/inventory`)"
      - "traefik.http.services.inventory.loadbalancer.server.port=8002"
    networks:
      - pulse-network

  # ============================================
  # Billing Service (Placeholder)
  # ============================================
  # billing:
  #   build:
  #     context: ./services/billing
  #     dockerfile: Dockerfile
  #   container_name: pulse-billing
  #   restart: unless-stopped
  #   environment:
  #     DB_HOST: postgres
  #     NATS_URL: nats://nats:4222
  #     MINIO_ENDPOINT: minio:9000
  #   ports:
  #     - "8003:8003"
  #   depends_on:
  #     - postgres
  #     - nats
  #     - minio
  #   networks:
  #     - pulse-network

# ============================================
# Networks (extends base)
# ============================================
networks:
  pulse-network:
    external: true
