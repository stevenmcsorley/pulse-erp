version: '3.9'

#
# Pulse ERP - Microservices Stack
# Extends docker-compose.base.yml
#
# Services: Orders, Inventory, Billing, HR, OLAP
# Target: Raspberry Pi 5 (arm64)
#

services:
  # ============================================
  # Orders Service
  # ============================================
  orders:
    build:
      context: ./services/orders
      dockerfile: Dockerfile
    container_name: pulse-orders
    restart: unless-stopped
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-pulse_erp}
      POSTGRES_USER: ${POSTGRES_USER:-pulseadmin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      NATS_URL: nats://nats:4222
      NATS_STREAM: orders
      SERVICE_NAME: orders-service
      SERVICE_PORT: 8001
    ports:
      - "8011:8001"  # Changed from 8001 to avoid conflict
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8001/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.orders.rule=PathPrefix(`/orders`)"
      - "traefik.http.services.orders.loadbalancer.server.port=8001"
      - "traefik.http.routers.orders.middlewares=cors-headers"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolalloworiginlist=http://192.168.1.199:3001"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowcredentials=true"
    networks:
      - pulse-network

  # ============================================
  # Inventory Service
  # ============================================
  inventory:
    build:
      context: ./services/inventory
      dockerfile: Dockerfile
    container_name: pulse-inventory
    restart: unless-stopped
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-pulse_erp}
      POSTGRES_USER: ${POSTGRES_USER:-pulseadmin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      NATS_URL: nats://nats:4222
      NATS_STREAM: orders
      SERVICE_NAME: inventory-service
      SERVICE_PORT: 8002
    ports:
      - "8012:8002"  # Changed from 8002 to avoid conflict
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8002/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.inventory.rule=PathPrefix(`/inventory`)"
      - "traefik.http.services.inventory.loadbalancer.server.port=8002"
      - "traefik.http.routers.inventory.middlewares=cors-headers"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolalloworiginlist=http://192.168.1.199:3001"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowcredentials=true"
    networks:
      - pulse-network

  # ============================================
  # Billing Service
  # ============================================
  billing:
    build:
      context: ./services/billing
      dockerfile: Dockerfile
    container_name: pulse-billing
    restart: unless-stopped
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-pulse_erp}
      POSTGRES_USER: ${POSTGRES_USER:-pulseadmin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      NATS_URL: nats://nats:4222
      NATS_STREAM: orders
      SERVICE_NAME: billing-service
      SERVICE_PORT: 8003
      DEFAULT_PAYMENT_TERMS_DAYS: 30
    ports:
      - "8013:8003"  # Changed from 8003 to avoid conflict
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8003/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.billing.rule=PathPrefix(`/billing`)"
      - "traefik.http.services.billing.loadbalancer.server.port=8003"
    networks:
      - pulse-network

  # ============================================
  # OLAP Worker
  # ============================================
  olap-worker:
    build:
      context: ./services/olap-worker
      dockerfile: Dockerfile
    restart: unless-stopped
    user: root
    environment:
      NATS_URL: nats://nats:4222
      NATS_STREAM: orders
      DUCKDB_PATH: /data/pulse_olap.duckdb
      SERVICE_NAME: olap-worker
      SERVICE_PORT: 8004
    ports:
      - "8014:8004"  # Changed from 8004 to avoid conflict
    volumes:
      - olap-data:/data
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8004/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      nats:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.olap.rule=PathPrefix(`/olap`)"
      - "traefik.http.services.olap.loadbalancer.server.port=8004"
    networks:
      - pulse-network

# ============================================
# Volumes
# ============================================
volumes:
  olap-data:
    driver: local

# ============================================
# Networks (extends base)
# ============================================
networks:
  pulse-network:
    external: true
